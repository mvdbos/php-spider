#!/usr/bin/env php

<?php

use SebastianBergmann\CodeCoverage\CodeCoverage;

if ($argc == 2 && is_numeric($argv[1])) {
    $requiredLineCoverage = floatval($argv[1]);
    if ($requiredLineCoverage > 100) {
        exit("Usage: coverage-enforce <percentage> (percentage <= 100)\n");
    }
} else {
    $requiredLineCoverage = 100;
}

print "\n\e[0;37m#############################################################\e[0m";
print "\n\e[0;37m# Starting Unit Tests with code coverage. Requirement: {$requiredLineCoverage}% #\e[0m";
print "\n\e[0;37m#############################################################\n\n\e[0m";

chdir(realpath(dirname(__FILE__) . '/../'));
if (!file_exists("./build/coverage")) {
    mkdir("./build/coverage/", 0777, true);
}
require './vendor/autoload.php';

passthru("XDEBUG_MODE=coverage ./vendor/bin/phpunit --colors=always --coverage-php build/coverage/coverage.php  --coverage-text=build/coverage/coverage.txt --coverage-html build/coverage/html", $status);
if ($status != 0) {
    exit($status);
}

/** @var CodeCoverage $coverage */
$coverage = require_once('build/coverage/coverage.php');
$report = $coverage->getReport();
$percentage = round(($report->numberOfExecutedLines() / $report->numberOfExecutableLines()) * 100, 2);

if ($percentage < $requiredLineCoverage) {
    print "\n\n\e[0;37;41mLine Coverage NOT OK (Actual coverage of {$percentage}% < requirement of {$requiredLineCoverage}%)\e[0m\n\n";
    exit(1);
} else {
    print "\n\n\e[0;30;42mUnit tests and line coverage OK (Actual coverage of {$percentage}% >= requirement of {$requiredLineCoverage}%)\e[0m\n\n";
    exit(0);
}
